version: '3.8'

services:
  mastodon-web:
    extends:
      file: 'docker-compose.base.yml'
      service: 'mastodon-base'
    container_name: 'mastodon-web-${ENVIRONMENT_NAME}'
    command: 'bash -c "/provision.sh; rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"'
    volumes:
      - './provision.sh:/provision.sh:ro'
    environment:
      MASTODON_ADMIN_USERNAME: '${MASTODON_ADMIN_USERNAME}'
      MASTODON_ADMIN_EMAIL: '${MASTODON_ADMIN_EMAIL}'
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
      interval: 5s
      timeout: 5s
      retries: 12
    depends_on:
      mastodon-db:
        condition: service_healthy
      mastodon-redis:
        condition: service_healthy
      mastodon-es:
        condition: service_healthy
    labels:
      - 'com.centurylinklabs.watchtower.monitor-only=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.mastodon.rule=Host(`${MASTODON_DOMAIN}`)'
      - 'traefik.http.routers.mastodon.entrypoints=websecure'
      - 'traefik.http.routers.mastodon.tls=true'
      - 'traefik.http.routers.mastodon.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.mastodon.tls.domains[0].main=${MASTODON_DOMAIN}'
      - 'traefik.http.routers.mastodon.middlewares=extranet@file'
      - 'traefik.http.services.mastodon.loadbalancer.server.port=3000'

  mastodon-streaming:
    extends:
      file: 'docker-compose.base.yml'
      service: 'mastodon-base'
    container_name: 'mastodon-streaming-${ENVIRONMENT_NAME}'
    command: 'node ./streaming'
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    depends_on:
      mastodon-web:
        condition: service_healthy
    labels:
      - 'com.centurylinklabs.watchtower.monitor-only=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.mastodon-streaming.rule=Host(`${MASTODON_DOMAIN}`) && PathPrefix(`/api/v1/streaming`)'
      - 'traefik.http.routers.mastodon-streaming.entrypoints=websecure'
      - 'traefik.http.routers.mastodon-streaming.tls=true'
      - 'traefik.http.routers.mastodon-streaming.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.mastodon-streaming.tls.domains[0].main=${MASTODON_DOMAIN}'
      - 'traefik.http.routers.mastodon-streaming.middlewares=extranet@file'
      - 'traefik.http.services.mastodon-streaming.loadbalancer.server.port=4000'

  mastodon-sidekiq:
    extends:
      file: 'docker-compose.base.yml'
      service: 'mastodon-base'
    container_name: 'mastodon-sidekiq-${ENVIRONMENT_NAME}'
    command: 'bundle exec sidekiq'
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]
    depends_on:
      mastodon-web:
        condition: service_healthy
    labels:
      - 'com.centurylinklabs.watchtower.monitor-only=true'

  mastodon-db:
    extends:
      file: '../../libs/base/docker-compose.yml'
      service: 'base'
    container_name: 'mastodon-db-${ENVIRONMENT_NAME}'
    image: 'postgres:alpine'
    volumes:
      - 'mastodon-db:/var/lib/postgresql/data'
    environment:
      POSTGRES_DB: 'mastodon'
      POSTGRES_USER: 'mastodon-user'
      POSTGRES_PASSWORD: '${MASTODON_POSTGRES_PASSWORD}'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'mastodon-user', '-d', 'mastodon']
      interval: 5s
      timeout: 5s
    labels:
      - 'com.centurylinklabs.watchtower.monitor-only=true'

  mastodon-redis:
    extends:
      file: '../../libs/base/docker-compose.yml'
      service: 'base'
    container_name: 'mastodon-redis-${ENVIRONMENT_NAME}'
    image: 'redis:alpine'
    command: 'redis-server --save 3600 1'
    volumes:
      - 'mastodon-redis:/data'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
    labels:
      - 'com.centurylinklabs.watchtower.monitor-only=true'

  mastodon-es:
    extends:
      file: '../../libs/base/docker-compose.yml'
      service: 'base'
    container_name: 'mastodon-es-${ENVIRONMENT_NAME}'
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.7'
    volumes:
      - 'mastodon-es:/usr/share/elasticsearch/data'
    environment:
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'xpack.license.self_generated.type=basic'
      - 'xpack.security.enabled=false'
      - 'xpack.watcher.enabled=false'
      - 'xpack.graph.enabled=false'
      - 'xpack.ml.enabled=false'
      - 'bootstrap.memory_lock=true'
      - 'cluster.name=mastodon-es'
      - 'discovery.type=single-node'
      - 'thread_pool.write.queue_size=1000'
      - 'ingest.geoip.downloader.enabled=false'
    healthcheck:
      test: ['CMD-SHELL', 'curl --silent --fail localhost:9200/_cluster/health || exit 1']
      interval: 5s
      timeout: 5s
      retries: 6
    labels:
      - 'com.centurylinklabs.watchtower.monitor-only=true'

volumes:
  mastodon-data:
    external: true
    name: 'mastodon-data-${ENVIRONMENT_NAME}'
  mastodon-db:
    external: true
    name: 'mastodon-db-${ENVIRONMENT_NAME}'
  mastodon-es:
    external: true
    name: 'mastodon-es-${ENVIRONMENT_NAME}'
  mastodon-redis:
    external: true
    name: 'mastodon-redis-${ENVIRONMENT_NAME}'

networks:
  default:
    external:
      name: docker-host-network
