
services:
  miniflux:
    extends:
      file: '../../libs/base/docker-compose.yml'
      service: 'base'
    container_name: 'miniflux'
    image: 'miniflux/miniflux:latest'
    networks:
      - 'default-frontend'
      - 'default-backend'
    environment:
      DATABASE_URL: 'postgres://miniflux-user:${MINIFLUX_POSTGRES_PASSWORD}@miniflux-db:5432/miniflux?sslmode=disable'
      RUN_MIGRATIONS: '1'
      CREATE_ADMIN: '1'
      ADMIN_USERNAME: '${MINIFLUX_INITIAL_USER}'
      ADMIN_PASSWORD: '${MINIFLUX_INITIAL_PASSWORD}'
      POLLING_FREQUENCY: '15'
      BASE_URL: 'https://miniflux.${DEFAULT_DOMAIN_SUFFIX}'
      AUTH_PROXY_HEADER: 'Remote-User'
      AUTH_PROXY_USER_CREATION: '1'
    healthcheck:
      test: '/usr/bin/miniflux -healthcheck auto'
      start_period: '5s'
      interval: '5s'
    depends_on:
      miniflux-db:
        condition: 'service_healthy'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.miniflux.rule=Host(`miniflux.${DEFAULT_DOMAIN_SUFFIX}`)'
      - 'traefik.http.routers.miniflux.entrypoints=websecure'
      - 'traefik.http.routers.miniflux.tls=true'
      - 'traefik.http.routers.miniflux.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.miniflux.tls.domains[0].main=miniflux.${DEFAULT_DOMAIN_SUFFIX}'
      - 'traefik.http.routers.miniflux.middlewares=intranet-authenticated@file'
      - 'traefik.http.services.miniflux.loadbalancer.server.port=8080'

  miniflux-db:
    extends:
      file: '../../libs/base/docker-compose.yml'
      service: 'base'
    container_name: 'miniflux-db'
    image: 'postgres'
    networks:
      - 'default-backend'
    volumes:
      - 'miniflux-db:/var/lib/postgresql/data'
    environment:
      POSTGRES_DB: 'miniflux'
      POSTGRES_USER: 'miniflux-user'
      POSTGRES_PASSWORD: '${MINIFLUX_POSTGRES_PASSWORD}'
    healthcheck:
      test: 'pg_isready -U miniflux-user -d miniflux'
      start_period: '5s'
      interval: '5s'

volumes:
  miniflux-db:
    external: true

networks:
  default-frontend:
    external: true
  default-backend:
    external: true
